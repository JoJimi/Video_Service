version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: "docker-mysql"
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=video
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
    restart: always

  redis:
    image: redis:latest
    container_name: "docker-redis"
    ports:
      - 6379:6379
    restart: always

  mongodb:
    image: mongo:latest
    container_name: "docker-mongo"
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/data:/data/db
    environment:
      - MONGO_ROOT_USERNAME=local
      - MONGO_ROOT_PASSWORD=local
      - MONGO_DATABASE=video
    restart: always

  myvideo:
    build: .
    container_name: "docker-video"
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - redis
      - mongodb
    environment:
      # 필요하다면 여기서 Spring Profile, DB 접속정보 등을 추가로 지정 가능
      # 예: SPRING_PROFILES_ACTIVE=dev
      #     (MySQL/Redis/Mongo 접속정보는 application.yml에서 docker 호스트명으로 설정하므로 생략)
      - TZ=Asia/Seoul
    restart: always

  # Nginx 컨테이너
  nginx:
    image: nginx:latest
    container_name: "docker-nginx"
    ports:
      - 80:80
    depends_on:
      - myvideo
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always
